{"ast":null,"code":"import { BehaviorSubject } from \"rxjs\";\nimport { Document } from \"../shared/document.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/data-storage.service\";\nexport let DocumentService = /*#__PURE__*/(() => {\n  class DocumentService {\n    constructor(dataStorageService) {\n      this.dataStorageService = dataStorageService; // documentsUpdate = new Subject<Document[]>();\n\n      this.documents = [];\n      this.documentsUpdate = new BehaviorSubject(this.documents);\n    }\n\n    setDocuments(documents) {\n      this.documents = documents;\n      this.documentsUpdate.next(this.documents.slice());\n    }\n\n    getDocuments() {\n      return this.documents.slice();\n    }\n\n    getDocument(id) {\n      let selectedDoc = this.documents.find(doc => doc.id === id) || new Document(-1, \"Not Real\", \"not found\", \"\");\n      return selectedDoc;\n    }\n\n    refreshDocuments() {\n      this.dataStorageService.fetchDocuments().subscribe();\n    }\n\n    deleteDocument(id) {\n      this.documents.find(doc => doc.id === id);\n      this.documentsUpdate.next(this.documents.slice());\n    }\n\n  }\n\n  DocumentService.ɵfac = function DocumentService_Factory(t) {\n    return new (t || DocumentService)(i0.ɵɵinject(i1.DataStorageService));\n  };\n\n  DocumentService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DocumentService,\n    factory: DocumentService.ɵfac\n  });\n  return DocumentService;\n})();","map":null,"metadata":{},"sourceType":"module"}