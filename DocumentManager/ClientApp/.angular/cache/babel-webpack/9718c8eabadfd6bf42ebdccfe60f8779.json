{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { HttpEventType } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../documents.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-uploader\";\nimport * as i5 from \"@angular/common\";\n\nfunction DocumentAddComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 13);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"aria-valuenow\", ctx_r1.uploadProgress);\n  }\n}\n\nfunction DocumentAddComponent_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function DocumentAddComponent_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onCancelUpload();\n    });\n    i0.ɵɵtext(1, \"Cancel\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DocumentAddComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵelementStart(2, \"div\", 16);\n    i0.ɵɵelement(3, \"i\", 17);\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 18);\n    i0.ɵɵelementStart(7, \"i\", 19);\n    i0.ɵɵlistener(\"click\", function DocumentAddComponent_div_22_Template_i_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const f_r6 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.cancelUpload(f_r6.id);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const f_r6 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(f_r6.name);\n  }\n}\n\nexport let DocumentAddComponent = /*#__PURE__*/(() => {\n  class DocumentAddComponent {\n    constructor(http, documentsService, router, route) {\n      this.http = http;\n      this.documentsService = documentsService;\n      this.router = router;\n      this.route = route;\n      this.statusMessage = \"\"; // files: FileList | null = null;\n\n      this.uploadSub = new Subscription();\n      this.options = {\n        concurrency: 1,\n        maxUploads: 3,\n        maxFileSize: 1000000\n      };\n      this.files = []; // local uploading files array\n\n      this.uploadInput = new EventEmitter(); // input events, we use this to emit data to ngx-uploader\n    }\n\n    ngOnInit() {\n      this.statusMessage = 'Are you trying to upload some Docs bro? Noice!';\n    }\n\n    onUploadOutput(output) {\n      switch (output.type) {\n        case 'allAddedToQueue':\n          // uncomment this if you want to auto upload files when added\n          // const event: UploadInput = {\n          //   type: 'uploadAll',\n          //   url: '/upload',\n          //   method: 'POST',\n          //   data: { foo: 'bar' }\n          // };\n          // this.uploadInput.emit(event);\n          break;\n\n        case 'addedToQueue':\n          if (typeof output.file !== 'undefined') {\n            this.files.push(output.file);\n          }\n\n          break;\n\n        case 'uploading':\n          if (typeof output.file !== 'undefined') {\n            // update current data in files array for uploading file\n            const index = this.files.findIndex(file => typeof output.file !== 'undefined' && file.id === output.file.id);\n            this.files[index] = output.file;\n          }\n\n          break;\n\n        case 'removed':\n          // remove file from array when removed\n          this.files = this.files.filter(file => file !== output.file);\n          break;\n\n        case 'done':\n          // The file is downloaded\n          break;\n      }\n    }\n\n    startUpload() {\n      const event = {\n        type: 'uploadAll',\n        url: 'https://localhost:7185/api/docs/new',\n        method: 'POST',\n        data: {\n          foo: 'bar'\n        }\n      };\n      this.uploadInput.emit(event);\n    }\n\n    cancelUpload(id) {\n      this.uploadInput.emit({\n        type: 'cancel',\n        id: id\n      });\n    }\n\n    removeFile(id) {\n      this.uploadInput.emit({\n        type: 'remove',\n        id: id\n      });\n    }\n\n    removeAllFiles() {\n      this.uploadInput.emit({\n        type: 'removeAll'\n      });\n    }\n\n    uploadFile(newFile) {\n      console.log(\"IS THIS THING ON???\");\n      let file = new FormData();\n      file.append('file', newFile, newFile.name);\n      console.log(\"SEND IT BOIIIIII!!\");\n      this.http.post('https://localhost:7185/api/docs/new', file, {\n        reportProgress: true,\n        observe: 'events'\n      }).subscribe({\n        next: event => {\n          if (event.type === HttpEventType.UploadProgress) {\n            this.uploadProgress = Math.round(100 * event.loaded / event.total);\n            this.statusMessage = 'Wait for it... WAIT FOR IT';\n          } else if (event.type === HttpEventType.Response) {\n            this.statusMessage = 'That Doc has been uploaded boi!!';\n            this.documentsService.addDocument();\n            this.onCancel();\n          }\n        },\n        error: err => {\n          return console.log(err);\n        }\n      });\n    }\n\n    onCancelUpload() {\n      this.uploadSub.unsubscribe();\n      this.reset();\n    }\n\n    onCancel() {\n      this.router.navigate(['../'], {\n        relativeTo: this.route\n      });\n    }\n\n    reset() {\n      this.uploadProgress = 0;\n      this.uploadSub.unsubscribe();\n    }\n\n    ngOnDestroy() {\n      console.log(\"ARE YOU DESTROYING ME????????????\");\n    }\n\n  }\n\n  DocumentAddComponent.ɵfac = function DocumentAddComponent_Factory(t) {\n    return new (t || DocumentAddComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.DocumentService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute));\n  };\n\n  DocumentAddComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DocumentAddComponent,\n    selectors: [[\"app-document-add\"]],\n    decls: 23,\n    vars: 6,\n    consts: [[1, \"row\"], [1, \"col-xs-12\"], [1, \"form-group\"], [\"type\", \"file\", \"ngFileSelect\", \"\", \"id\", \"file\", \"name\", \"document\", 1, \"file-upload\", 2, \"display\", \"none\", 3, \"options\", \"uploadInput\", \"uploadOutput\"], [\"uploadDoc\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"row\", 2, \"margin-top\", \"20px\", \"margin-bottom\", \"20px\"], [1, \"progress\"], [\"class\", \"progress-bar progress-bar-striped\", \"role\", \"progressbar\", \"style\", \"width: 100%\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-danger\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 3, \"click\"], [\"class\", \"upload-item\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\", \"aria-valuemax\", \"100\", 1, \"progress-bar\", \"progress-bar-striped\", 2, \"width\", \"100%\"], [1, \"upload-item\"], [1, \"filename\"], [1, \"filename-left\"], [1, \"ionicon\", \"ion-ios-copy\"], [1, \"filename-right\"], [1, \"ionicon\", \"ion-close-round\", 3, \"click\"]],\n    template: function DocumentAddComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r10 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 0);\n        i0.ɵɵelementStart(4, \"div\", 1);\n        i0.ɵɵelementStart(5, \"h4\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 3, 4);\n        i0.ɵɵlistener(\"uploadOutput\", function DocumentAddComponent_Template_input_uploadOutput_7_listener($event) {\n          return ctx.onUploadOutput($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 5);\n        i0.ɵɵlistener(\"click\", function DocumentAddComponent_Template_button_click_9_listener() {\n          i0.ɵɵrestoreView(_r10);\n\n          const _r0 = i0.ɵɵreference(8);\n\n          return _r0.click();\n        });\n        i0.ɵɵtext(10, \"Select a Doc\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 6);\n        i0.ɵɵelementStart(12, \"div\", 1);\n        i0.ɵɵelementStart(13, \"div\", 7);\n        i0.ɵɵtemplate(14, DocumentAddComponent_div_14_Template, 1, 1, \"div\", 8);\n        i0.ɵɵtemplate(15, DocumentAddComponent_button_15_Template, 2, 0, \"button\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 0);\n        i0.ɵɵelementStart(17, \"div\", 1);\n        i0.ɵɵelementStart(18, \"button\", 10);\n        i0.ɵɵlistener(\"click\", function DocumentAddComponent_Template_button_click_18_listener() {\n          return ctx.startUpload();\n        });\n        i0.ɵɵtext(19, \"Select Document\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function DocumentAddComponent_Template_button_click_20_listener() {\n          return ctx.onCancel();\n        });\n        i0.ɵɵtext(21, \"Back\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, DocumentAddComponent_div_22_Template, 8, 1, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.statusMessage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"options\", ctx.options)(\"uploadInput\", ctx.uploadInput);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.uploadProgress > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.uploadProgress > 0);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.files);\n      }\n    },\n    directives: [i4.NgFileSelectDirective, i5.NgIf, i5.NgForOf],\n    styles: [\".file-upload[_ngcontent-%COMP%]{display:none}\"]\n  });\n  return DocumentAddComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}